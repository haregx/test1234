{
  "flutter_screen_simple": {
    "prefix": "fscreen",
    "body": [
      "import 'package:flutter/material.dart';",
      "import '../core/platform_base_screen.dart';",
      "import '../widgets/platform_widgets.dart';",
      "import '../l10n/app_localizations.dart';",
      "",
      "/// ${1:ScreenName} - Platform-compliant screen",
      "/// ",
      "/// Automatically follows iOS and Android design guidelines",
      "class ${1:ScreenName} extends PlatformBaseScreen {",
      "  const ${1:ScreenName}({super.key});",
      "",
      "  @override",
      "  String? get title => AppLocalizations.of(context)!.${2:screenTitle};",
      "",
      "  @override",
      "  State<${1:ScreenName}> createState() => _${1:ScreenName}State();",
      "}",
      "",
      "class _${1:ScreenName}State extends PlatformBaseScreenState<${1:ScreenName}> {",
      "  @override",
      "  Widget buildContent(BuildContext context) {",
      "    return Padding(",
      "      padding: EdgeInsets.all(getPlatformSpacing('medium')),",
      "      child: Column(",
      "        crossAxisAlignment: CrossAxisAlignment.start,",
      "        children: [",
      "          Text(",
      "            '${3:Content}',",
      "            style: getPlatformTextStyle('headline'),",
      "          ),",
      "          SizedBox(height: getPlatformSpacing('large')),",
      "          ",
      "          // Add your content here",
      "          PlatformButton(",
      "            icon: Icons.${4:icon_name},",
      "            onPressed: () {",
      "              // TODO: Implement action",
      "            },",
      "            child: Text(AppLocalizations.of(context)!.${5:buttonText}),",
      "          ),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "}"
    ],
    "description": "Creates a platform-compliant screen extending PlatformBaseScreen"
  },

  "flutter_screen_form": {
    "prefix": "fscreenform",
    "body": [
      "import 'package:flutter/material.dart';",
      "import '../core/platform_base_screen.dart';",
      "import '../widgets/platform_widgets.dart';",
      "import '../l10n/app_localizations.dart';",
      "",
      "/// ${1:FormScreenName} - Platform-compliant form screen",
      "class ${1:FormScreenName} extends PlatformBaseScreen {",
      "  const ${1:FormScreenName}({super.key});",
      "",
      "  @override",
      "  String? get title => AppLocalizations.of(context)!.${2:formTitle};",
      "",
      "  @override",
      "  State<${1:FormScreenName}> createState() => _${1:FormScreenName}State();",
      "}",
      "",
      "class _${1:FormScreenName}State extends PlatformBaseScreenState<${1:FormScreenName}>",
      "    with PlatformFormMixin {",
      "",
      "  final TextEditingController _${3:field}Controller = TextEditingController();",
      "",
      "  @override",
      "  void dispose() {",
      "    _${3:field}Controller.dispose();",
      "    super.dispose();",
      "  }",
      "",
      "  @override",
      "  Widget buildContent(BuildContext context) {",
      "    return buildWithLoading(",
      "      Form(",
      "        key: formKey,",
      "        child: Padding(",
      "          padding: EdgeInsets.all(getPlatformSpacing('medium')),",
      "          child: Column(",
      "            children: [",
      "              PlatformTextField(",
      "                controller: _${3:field}Controller,",
      "                labelText: AppLocalizations.of(context)!.${4:fieldLabel},",
      "                keyboardType: TextInputType.${5:text},",
      "              ),",
      "              SizedBox(height: getPlatformSpacing('large')),",
      "              ",
      "              PlatformButton(",
      "                icon: Icons.${6:save},",
      "                onPressed: _handleSubmit,",
      "                child: Text(AppLocalizations.of(context)!.${7:submitButton}),",
      "              ),",
      "            ],",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "",
      "  void _handleSubmit() {",
      "    submitForm(() async {",
      "      setLoading(true);",
      "      ",
      "      // TODO: Implement form submission",
      "      await Future.delayed(const Duration(seconds: 1));",
      "      ",
      "      setLoading(false);",
      "    });",
      "  }",
      "}"
    ],
    "description": "Creates a platform-compliant form screen with validation and loading"
  },

  "flutter_screen_list": {
    "prefix": "fscreenlist", 
    "body": [
      "import 'package:flutter/material.dart';",
      "import '../core/platform_base_screen.dart';",
      "import '../widgets/platform_widgets.dart';",
      "import '../l10n/app_localizations.dart';",
      "",
      "/// ${1:ListScreenName} - Platform-compliant list screen",
      "class ${1:ListScreenName} extends PlatformBaseScreen {",
      "  const ${1:ListScreenName}({super.key});",
      "",
      "  @override",
      "  String? get title => AppLocalizations.of(context)!.${2:listTitle};",
      "",
      "  @override",
      "  bool get enableScrolling => false; // ListView handles scrolling",
      "",
      "  @override",
      "  State<${1:ListScreenName}> createState() => _${1:ListScreenName}State();",
      "}",
      "",
      "class _${1:ListScreenName}State extends PlatformBaseScreenState<${1:ListScreenName}>",
      "    with PlatformListMixin, PlatformLoadingMixin {",
      "",
      "  List<${3:ItemType}> _items = [];",
      "",
      "  @override",
      "  void initState() {",
      "    super.initState();",
      "    _loadItems();",
      "  }",
      "",
      "  @override",
      "  Widget buildContent(BuildContext context) {",
      "    if (isLoading && _items.isEmpty) {",
      "      return buildLoadingIndicator();",
      "    }",
      "",
      "    return ListView.builder(",
      "      itemCount: _items.length + 1, // +1 for section header",
      "      itemBuilder: (context, index) {",
      "        if (index == 0) {",
      "          return buildSectionHeader(AppLocalizations.of(context)!.${4:sectionTitle});",
      "        }",
      "",
      "        final item = _items[index - 1];",
      "        return buildPlatformListTile(",
      "          leading: Icon(Icons.${5:item_icon}),",
      "          title: Text(item.${6:titleProperty}),",
      "          subtitle: Text(item.${7:subtitleProperty}),",
      "          showChevron: true,",
      "          onTap: () => _handleItemTap(item),",
      "        );",
      "      },",
      "    );",
      "  }",
      "",
      "  void _loadItems() async {",
      "    setLoading(true);",
      "    ",
      "    // TODO: Load items from API/database",
      "    await Future.delayed(const Duration(seconds: 1));",
      "    ",
      "    setState(() {",
      "      _items = []; // Replace with actual data",
      "    });",
      "    ",
      "    setLoading(false);",
      "  }",
      "",
      "  void _handleItemTap(${3:ItemType} item) {",
      "    // TODO: Handle item selection",
      "    showPlatformMessage('Selected: \\${item.${6:titleProperty}}');",
      "  }",
      "}"
    ],
    "description": "Creates a platform-compliant list screen with loading and section headers"
  }
}